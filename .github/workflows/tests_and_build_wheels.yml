name: Run tox abd build Wheels on Multiple OS

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
  release:
    types: [created]

jobs:
  test:
    name: Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12', '3.11', '3.10']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox

  build:
    if: github.event_name == 'release'
    name: Build wheels on ${{ matrix.os }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip build --user
    - name: Build wheels
      run: |
        python3 -m build
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/

  upload:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/biogeme-optimization
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist/
      - name: Upload wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}